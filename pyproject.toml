# SPDX-FileCopyrightText: openSTB contributors
# SPDX-License-Identifier: BSD-2-Clause-Patent

[build-system]
requires = ["hatchling", "openstb-i18n"]
build-backend = "hatchling.build"

[project]
name = "openstb-simulator"
description = "SONAR simulator"
version = "0.1.0"

requires-python = ">=3.11"
dependencies = [
  "click",
  "cryptography",
  "dask[distributed]",
  "numpy",
  "openstb-i18n",
  "quaternionic",
  "scipy",
  "zarr",
]

[project.optional-dependencies]

# Support for different cluster environments.
MPI = ["dask-mpi", "mpi4py"]

# Support for development and testing.
tests = ["pytest", "pytest-cov"]
dev = ["black", "flake8", "isort", "mypy", "openstb-simulator[tests]"]


#
# Install the CLI.
#

[project.scripts]
openstb-sim = "openstb.simulator.cli:openstb_sim"


#
# Register included plugins at the appropriate entry points.
#

[project.entry-points."openstb.simulator.config_loader"]
toml = "openstb.simulator.config_loader:TOMLLoader"

[project.entry-points."openstb.simulator.dask_cluster"]
local = "openstb.simulator.cluster:DaskLocalCluster"
mpi = "openstb.simulator.cluster:DaskMPICluster"

[project.entry-points."openstb.simulator.environment"]
invariant = "openstb.simulator.environment:InvariantEnvironment"

[project.entry-points."openstb.simulator.ping_times"]
constant_distance = "openstb.simulator.system.ping_times:ConstantDistance"
constant_interval = "openstb.simulator.system.ping_times:ConstantInterval"

[project.entry-points."openstb.simulator.point_targets"]
random_point_rectangle = "openstb.simulator.target.points:RandomPointRect"
single_point = "openstb.simulator.target.points:SinglePoint"

[project.entry-points."openstb.simulator.result_converter"]
matlab = "openstb.simulator.result_converter:MATLABConverter"
numpy = "openstb.simulator.result_converter:NumpyConverter"

[project.entry-points."openstb.simulator.scale_factor"]
anslie_mccolm_attenuation = "openstb.simulator.scale_factor.environmental:AnslieMcColmAttenuation"
geometric_spreading = "openstb.simulator.scale_factor.environmental:GeometricSpreading"
rectangular_beampattern = "openstb.simulator.scale_factor.beampattern:RectangularBeampattern"

[project.entry-points."openstb.simulator.signal"]
lfm_chirp = "openstb.simulator.system.signal:LFMChirp"

[project.entry-points."openstb.simulator.simulation"]
points = "openstb.simulator.simulation.points:PointSimulation"

[project.entry-points."openstb.simulator.signal_window"]
blackman = "openstb.simulator.system.signal_windows:BlackmanWindow"
blackman_harris = "openstb.simulator.system.signal_windows:BlackmanHarrisWindow"
generalised_cosine = "openstb.simulator.system.signal_windows:GeneralisedCosineWindow"
hamming = "openstb.simulator.system.signal_windows:HammingWindow"
hann = "openstb.simulator.system.signal_windows:HannWindow"
nuttall = "openstb.simulator.system.signal_windows:NuttallWindow"
tukey = "openstb.simulator.system.signal_windows:TukeyWindow"

[project.entry-points."openstb.simulator.system"]
generic = "openstb.simulator.system:GenericSystem"

[project.entry-points."openstb.simulator.trajectory"]
linear = "openstb.simulator.system.trajectory:Linear"

[project.entry-points."openstb.simulator.transducer"]
generic = "openstb.simulator.system.transducer:GenericTransducer"

[project.entry-points."openstb.simulator.travel_time"]
stop_and_hop = "openstb.simulator.travel_time:StopAndHop"


#
# Build system configuration.
#


[tool.hatch.build.targets.sdist]
exclude = [
  "*.mo",
]

[tool.hatch.build.targets.wheel]
packages = ["src/openstb"]
exclude = [
  ".gitignore",
]

[tool.hatch.build.targets.wheel.hooks.openstb-i18n]
domain = "openstb.simulator"


#
# Test configuration.
#

[tool.pytest.ini_options]
testpaths = "tests"
addopts = [
  "--import-mode=importlib",
  "--cov=openstb.simulator", "--cov-report=html:tests/coverage",
]
markers = [
  "cluster: tests which involve starting a cluster (exclude with -m 'not cluster')",
]
filterwarnings = [
  "ignore:Jupyter is migrating its paths:DeprecationWarning",
]

[tool.coverage.run]
branch = true
omit = [
  "*/openstb/i18n/*",
  "*/test_plugin_modules/*",
]

[tool.coverage.report]
exclude_lines = [
  "pragma:no cover",
  "^\\s*pass\\s*$",
  "^\\s*@overload",
]


#
# Configuration of linting tools.
#

[tool.black]
extend-exclude = "tests/test_plugin_modules/local/plugin_triple.py"

[tool.flake8]
# You need to have the flake8-pyproject plugin installed as flake8 does not
# natively support pyproject.toml yet.
extend-exclude = [
  "tests/test_plugin_modules/local/plugin_triple.py",
]
max-line-length = 88
ignore = ["E203", "E704", "W503"]
per-file-ignores = [
  "__init__.py:F401",
]

[tool.isort]
extend_skip = [
  "tests/test_plugin_modules/local/plugin_triple.py",
]
profile = "black"
src_paths = ["src"]
lines_after_imports = 2
atomic = true
combine_as_imports = true
force_sort_within_sections = true
known_first_party = ["openstb.i18n"]

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/extra/typing_stubs"
plugins = ["numpy.typing.mypy_plugin"]
